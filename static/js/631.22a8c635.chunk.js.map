{"version":3,"file":"static/js/631.22a8c635.chunk.js","mappings":"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","sources":["components/services/toasts.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst toastSettings = {\n    theme: \"colored\",\n};\n\nexport const toastSuccess = () => {\n    return toast.success(\"Hooray! We found what you were looking for ðŸ¤—\", toastSettings);\n};\nexport const toastInfoNothing = () => {\n    return toast.info(\"It looks like you want to find nothing, please check your query ðŸ˜•\", toastSettings);\n};\nexport const toastInfoDuplication = () => {\n    return toast.info(\"It looks like there are already movies found for your request, please check if this will be a new search ðŸ¤”\", toastSettings); \n};\nexport const toastWarn = () => {\n    return toast.warn(\"Sorry, nothing was found for your request, try something else ðŸ™ˆ\", toastSettings); \n};\nexport const toastError = () => {\n    return toast.error(\"Oops, something went wrong, please try again ðŸ™Š\", toastSettings);\n};","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nimport { device } from \"components/GlobalStyles\";\n\nexport const MovieDetailsMain = styled.main`\n    max-width: 1600px;\n    margin: 0 auto;\n    padding: 0 ${p => p.theme.space[4]}px;\n    span {\n        display: block;\n        @media ${device.tablet} {\n            margin-bottom: ${p => p.theme.space[5]}px;\n        }\n    }\n`;\n\nexport const MovieDetailsMainWrapper = styled.div`\n    @media ${device.mobileOnly} {\n        text-align: center;\n    }\n    @media ${device.tablet} {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n    img {\n        display: inline-block;\n        max-height: 500px;\n        max-width: 400px;\n    }\n`;\n\nexport const MovieDetailsInfoWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: ${p => p.theme.space[5]}px;\n    @media ${device.tablet} {\n        margin-left: ${p => p.theme.space[5]}px;\n    }\n    h2 {\n        color: ${p => p.theme.colors.cherryRed};\n    }\n    h3 {\n        color: ${p => p.theme.colors.reallyBisque};\n    }\n    span {\n        max-width: 1200px;\n    }\n`;\n\nexport const MovieDetailsGenresList = styled.ul`\n    display: flex;\n    @media ${device.mobileOnly} {\n        justify-content: center;\n    }\n    li {\n        &:not(:first-child) {\n        margin-left: ${p => p.theme.space[4]}px;\n        }\n    }\n`;\n\nexport const MovieDetailsAdditionalWrapper = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    max-width: 1600px;\n    margin: ${p => p.theme.space[5]}px auto;\n    h3 {\n        color: ${p => p.theme.colors.reallyBisque};\n    }\n`;\n\nexport const MovieDetailsAdditionalNavigate = styled.ul`\n    display: flex;\n    justify-content: center;\n    margin-bottom: ${p => p.theme.space[5]}px;\n    li {\n        margin-top: ${p => p.theme.space[4]}px;\n        padding: ${p => p.theme.space[3]}px;\n        border-radius: ${p => p.theme.radii.md};\n        border: ${p => `${p.theme.borders.normal} ${p.theme.colors.cherryRed}`};\n        background-color: ${p => p.theme.colors.reallyBisque};\n        &:not(:first-child) {\n            margin-left: ${p => p.theme.space[4]}px;\n        }\n        transition: ${p => p.theme.transition.cubicBezier};\n        &:hover {\n            transform: ${p => p.theme.transform.scaleThird};\n            box-shadow: ${p => p.theme.shadows.shadowSecond};\n            background-color: ${p => p.theme.colors.cherryRed};\n        }\n    }\n`;\n\nexport const NavTitle = styled(NavLink)`\n    padding: ${p => p.theme.space[3]}px;\n    color: ${p => p.theme.colors.cherryRed};\n    transition: ${p => p.theme.transition.cubicBezier};\n    &:hover {\n        color: ${p => p.theme.colors.reallyBisque};\n    }\n`;","import { useState, useEffect, Suspense } from \"react\";\nimport { Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { getMovieDetails, checkImages } from \"components/services/fetchMovies\";\nimport { toastError } from \"components/services/toasts\";\nimport { ProgressBar } from \"react-loader-spinner\";\nimport { ProgressBarStyle } from \"components/services/fetchMovies\";\nimport { MovieDetailsMain, MovieDetailsMainWrapper, MovieDetailsInfoWrapper, MovieDetailsGenresList, MovieDetailsAdditionalWrapper, MovieDetailsAdditionalNavigate, NavTitle } from \"./MovieDetails.styled\";\nimport { NavButton } from \"components/GlobalStyles\";\n\nexport const MovieDetails = () => {\n    const { movieId } = useParams()\n    const [movie, setMovie] = useState(null);\n    const location = useLocation();\n\n    useEffect(() => {\n        try {\n            getMovieDetails(movieId).then(setMovie);\n        } catch (error) {\n            toastError();\n        };\n    }, [movieId]);\n\n    if (!movie) {\n        return null;\n    };\n\n    const { poster_path, title, vote_average, overview, genres, release_date } = movie;\n    const imgForPoster = checkImages(\"poster\", poster_path);\n    const releaseDate = new Date(release_date).getFullYear();\n    const backLinkHref = location.state?.from ?? '/movies';\n\n    return (\n        <MovieDetailsMain>\n            <span style={{marginBottom: \"26px\"}}>\n                <NavButton to={backLinkHref}>Go back</NavButton>\n            </span>\n            <MovieDetailsMainWrapper>\n                <div>\n                    <img src={imgForPoster} alt={title}/>\n                </div>\n                <MovieDetailsInfoWrapper>\n                    <h2>{title} ({releaseDate})</h2>\n                    <p>User score: {vote_average.toFixed(1)}</p>\n                    <h3>Overview</h3>\n                    <span>{overview}</span>\n                    <h3>Genres</h3>\n                    <MovieDetailsGenresList>\n                        {genres.map(({ id, name }) => {\n                            return (\n                                <li key={id}>{name}</li>\n                            );\n                        })}\n                    </MovieDetailsGenresList>\n                </MovieDetailsInfoWrapper>\n            </MovieDetailsMainWrapper>\n            <MovieDetailsAdditionalWrapper>\n                <h3>Additional information</h3>\n                <MovieDetailsAdditionalNavigate>\n                    <li>\n                        <NavTitle to=\"cast\" state={{ from: location.state?.from }}>Cast</NavTitle>\n                    </li>\n                    <li>\n                        <NavTitle to=\"reviews\" state={{ from: location.state?.from }}>Reviews</NavTitle>\n                    </li>\n                </MovieDetailsAdditionalNavigate>\n                <Suspense fallback={<ProgressBar {...ProgressBarStyle}/>}>\n                    <Outlet context={movie} />\n                </Suspense>\n            </MovieDetailsAdditionalWrapper>\n        </MovieDetailsMain>\n    );\n};"],"names":["toastSettings","theme","toastInfoNothing","toast","toastInfoDuplication","toastWarn","toastError","MovieDetailsMain","styled","p","space","device","MovieDetailsMainWrapper","MovieDetailsInfoWrapper","colors","cherryRed","reallyBisque","MovieDetailsGenresList","MovieDetailsAdditionalWrapper","MovieDetailsAdditionalNavigate","radii","md","borders","normal","transition","cubicBezier","transform","scaleThird","shadows","shadowSecond","NavTitle","NavLink","MovieDetails","movieId","useParams","useState","movie","setMovie","location","useLocation","useEffect","getMovieDetails","then","error","poster_path","title","vote_average","overview","genres","release_date","imgForPoster","checkImages","releaseDate","Date","getFullYear","backLinkHref","state","from","style","marginBottom","to","src","alt","toFixed","map","id","name","Suspense","fallback","ProgressBarStyle","context"],"sourceRoot":""}