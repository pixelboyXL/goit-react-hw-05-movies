{"version":3,"file":"static/js/321.1a6f570e.chunk.js","mappings":"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","sources":["components/FilmList/FilmList.styled.js","components/FilmList/FilmsList.js","components/services/toasts.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilmListSection = styled.main`\n    height: 100%;\n    margin-bottom: ${p => p.theme.space[5]}px;\n`;\n\nexport const FilmListStyled = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: ${p => p.theme.space[5]}px;\n`;\n\nexport const FilmListWrapper = styled.div`\n    text-align: center;\n    transition: ${p => p.theme.transition.cubicBezier};\n    &:hover {\n        transform: ${p => p.theme.transform.scaleFirst};\n    }\n`;\n\nexport const FilmListTitle = styled.p`\n    padding-top: ${p => p.theme.space[4]}px;\n    font-weight: ${p => p.theme.fontWeights.bold};\n    font-size: ${p => p.theme.fontSizes.m};\n    color: ${p => p.theme.colors.reallyBisque};\n`;","import PropTypes from 'prop-types';\nimport { Link, useLocation } from \"react-router-dom\";\nimport { checkImages } from \"components/services/fetchMovies\";\nimport { FilmListSection, FilmListStyled, FilmListWrapper, FilmListTitle } from './FilmList.styled';\n\nexport const FilmsList = ({ data }) => {\n    const location = useLocation();\n\n    return (\n        <FilmListSection>\n            <FilmListStyled>\n                {data.map(({ id, title, poster_path }) => {\n                    const imgForPoster = checkImages(\"poster\", poster_path);\n                    return (\n                        <li key={id}>\n                            <Link to={`/movies/${id}`} state={{from: location}}>\n                                <FilmListWrapper>\n                                    <img src={imgForPoster} alt={title} />\n                                    <FilmListTitle>{title}</FilmListTitle>\n                                </FilmListWrapper>\n                            </Link>\n                        </li>\n                    );\n                })}\n            </FilmListStyled>\n        </FilmListSection>\n    );\n};\n\nFilmsList.propTypes = {\n    data: PropTypes.array.isRequired,\n};","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst toastSettings = {\n    theme: \"colored\",\n};\n\nexport const toastSuccess = () => {\n    return toast.success(\"Hooray! We found what you were looking for ðŸ¤—\", toastSettings);\n};\nexport const toastInfoNothing = () => {\n    return toast.info(\"It looks like you want to find nothing, please check your query ðŸ˜•\", toastSettings);\n};\nexport const toastInfoDuplication = () => {\n    return toast.info(\"It looks like there are already movies found for your request, please check if this will be a new search ðŸ¤”\", toastSettings); \n};\nexport const toastWarn = () => {\n    return toast.warn(\"Sorry, nothing was found for your request, try something else ðŸ™ˆ\", toastSettings); \n};\nexport const toastError = () => {\n    return toast.error(\"Oops, something went wrong, please try again ðŸ™Š\", toastSettings);\n};","import styled from 'styled-components';\n\nexport const SearchBar = styled.section`\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    min-height: ${p => p.theme.space[6]}px;\n    padding-top: ${p => p.theme.space[4]}px;\n    padding-right: ${p => p.theme.space[5]}px;\n    padding-bottom: ${p => p.theme.space[4]}px;\n    padding-left: ${p => p.theme.space[5]}px;\n`;\n\nexport const SearchForm = styled.form`\n    display: flex;\n    align-items: center;\n    overflow: hidden;\n    width: 100%;\n    max-width: 600px;\n    background-color: ${p => p.theme.colors.reallyBisque};\n    border: ${p => `${p.theme.borders.normal} ${p.theme.colors.cherryRed}`};\n    border-radius: ${p => p.theme.radii.sm};\n`;\n\nexport const SearchFormButton = styled.button`\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    opacity: 0.6;\n    transition: ${p => p.theme.transition.cubicBezier};\n    cursor: pointer;\n    outline: none;\n    background-color: ${p => p.theme.colors.tastyCoffe};\n    &:hover {\n        opacity: 1;\n    }\n`;\n\nexport const SearchFormInput = styled.input`\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: ${p => p.theme.fontSizes.m};\n    border: none;\n    outline: none;\n    padding-left: ${p => p.theme.space[4]}px;\n    padding-right: ${p => p.theme.space[4]}px;\n    background-color: ${p => p.theme.colors.reallyBisque};\n    &::placeholder {\n        font: inherit;\n        font-size: ${p => p.theme.fontSizes.m};\n    }\n`;","import { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getSearchMovie } from 'components/services/fetchMovies';\nimport { FilmsList } from \"components/FilmList/FilmsList\";\nimport { SearchBar, SearchForm, SearchFormButton, SearchFormInput } from \"pages/Movies/Movies.styled\";\nimport { toastInfoNothing, toastInfoDuplication, toastWarn, toastError } from \"components/services/toasts\";\nimport { ProgressBar } from \"react-loader-spinner\";\nimport { ProgressBarStyle } from \"components/services/fetchMovies\";\nimport { Error } from \"components/Error\";\nimport img from 'components/images/404-error-page-examples-best.jpg';\n\nexport const Movies = () => {\n    const [text, setText] = useState('');\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const searchFilms = (event) => {\n        event.preventDefault();\n        if (text.trim() === '') {\n            return toastInfoNothing();\n        };\n        if (text === searchQuery.trim()) {\n            return toastInfoDuplication();\n        };\n        setMovies([]);\n        setSearchParams(text !== '' ? { query: text } : {});\n        setText('');\n    };\n    \n    const searchQuery = searchParams.get('query') ?? '';\n\n    useEffect(() => {\n        if (!searchQuery) {\n            return;\n        };\n        setLoading(true);\n        try {\n            getSearchMovie(searchQuery).then(({ total_results, results }) => {\n                if (total_results === 0) {\n                    toastWarn();\n                    setLoading(false);\n                    setError(true);\n                    return;\n                };\n                // if (results.length > 1 && searchQuery === '') {\n                //     toastSuccess();\n                // };\n                const onlyNeedValues = results.map(({ id, poster_path, title, vote_average, overview, genres, release_date }) => (\n                    {\n                        id,\n                        poster_path,\n                        title,\n                        vote_average,\n                        overview,\n                        genres,\n                        release_date,\n                    })\n                );\n                setMovies([...onlyNeedValues]);\n                setLoading(false);\n                setError(false);\n            }).finally(() => {\n                setLoading(false);\n            });\n        } catch (error) {\n            toastError();\n        };\n    }, [searchQuery]);\n\n    return (\n        <main style={{ flexGrow: \"1\" }}>\n            <SearchBar>\n                <SearchForm onSubmit={searchFilms}>\n                    <SearchFormInput\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search films\"\n                        name=\"text\"\n                        value={text}\n                        onChange={(event) => setText(event.currentTarget.value)}\n                    />\n                    <SearchFormButton type=\"submit\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" fill=\"currentColor\" viewBox=\"0 0 32 32\">\n                            <path d=\"M31.008 27.231l-7.58-6.447c-0.784-0.705-1.622-1.029-2.299-0.998 1.789-2.096 2.87-4.815 2.87-7.787 0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12c2.972 0 5.691-1.081 7.787-2.87-0.031 0.677 0.293 1.515 0.998 2.299l6.447 7.58c1.104 1.226 2.907 1.33 4.007 0.23s0.997-2.903-0.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8z\"></path>\n                        </svg>\n                    </SearchFormButton>\n                </SearchForm>\n                {loading && <ProgressBar {...ProgressBarStyle} />}\n            </SearchBar>\n            {movies !== null && <FilmsList data={movies} />}\n            {error && <Error errorImg={img}/>}\n        </main>\n    );\n};"],"names":["FilmListSection","styled","p","theme","space","FilmListStyled","FilmListWrapper","transition","cubicBezier","transform","scaleFirst","FilmListTitle","fontWeights","bold","fontSizes","m","colors","reallyBisque","FilmsList","data","location","useLocation","map","id","title","poster_path","imgForPoster","checkImages","to","state","from","src","alt","toastSettings","toastInfoNothing","toast","toastInfoDuplication","toastWarn","toastError","SearchBar","SearchForm","borders","normal","cherryRed","radii","sm","SearchFormButton","tastyCoffe","SearchFormInput","Movies","useState","text","setText","movies","setMovies","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","getSearchMovie","then","total_results","results","onlyNeedValues","vote_average","overview","genres","release_date","finally","style","flexGrow","onSubmit","event","preventDefault","trim","query","type","autoComplete","autoFocus","placeholder","name","value","onChange","currentTarget","xmlns","width","height","fill","viewBox","d","ProgressBarStyle","Error","errorImg","img"],"sourceRoot":""}